--- modules/lti_tool_provider_provision/src/Services/ProvisionService.php
+++ modules/lti_tool_provider_provision/src/Services/ProvisionService.php
@@ -125,7 +125,25 @@ public function createProvisionedEntity(array $context, EntityInterface $provisi
         $entityBundle = $provision->get('provision_bundle')->value;
 
         $bundleType = $this->entityTypeManager->getDefinition($entityType)->getKey('bundle');
-        $entity = $this->entityTypeManager->getStorage($entityType)->create([$bundleType => $entityBundle]);
+        $entityLookup = $this->config->get('entity_lookup');
+        $entityLookupDefault = $this->config->get('entity_lookup_default');
+        $entityDefaults = $this->config->get('entity_defaults');
+        $entity = NULL;
+        if ($entityLookup && $entityLookupDefault && $entityLookupDefault != 1) {
+          $existing_ids = [];
+          $entityLookupDefaults = explode(':', $entityLookupDefault);
+          $existing_ids[] = \Drupal::entityQuery($entityType)
+            ->condition($bundleType, $entityBundle)
+            ->condition($entityLookupDefaults[0], $context[$entityLookupDefaults[1]])
+            ->execute();
+          if (count($existing_ids) == 1 && count($existing_ids[0]) == 1) {
+            $existing_ids = array_values($existing_ids[0]);
+            $entity = $this->entityTypeManager->getStorage($entityType)->load($existing_ids[0]);
+          }
+        }
+        if (!$entity) {
+          $entity = $this->entityTypeManager->getStorage($entityType)->create([$bundleType => $entityBundle]);
+        }
 
         $event = new LtiToolProviderProvisionCreateProvisionedEntityEvent($context, $entity);
 
