<?php

use Drupal\Core\Database\Database;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * @file
 * Installation and schema related functions for the LTI Tool Provider module.
 */

/**
 * Implements hook_requirements().
 *
 * @param $phase
 *
 * @return array
 */
function lti_tool_provider_requirements($phase): array {
  $requirements = [];
  $oauth_available = class_exists('\\OauthProvider');

  if ($oauth_available) {
    $requirements['lti_tool_provider_oauth'] = [
      'title' => t('LTI Tool Provider - OAuth'),
      'value' => t('OAuth PECL library installed'),
    ];
  }
  else {
    $requirements['lti_tool_provider_oauth'] = [
      'title' => t('LTI Tool Provider - OAuth'),
      'severity' => REQUIREMENT_ERROR,
      'description' => t('The LTI Tool Provider module requires the <a href="https://www.php.net/manual/en/book.oauth.php" target="_blank">PECL OAuth</a> library.'),
    ];
    if ($phase == 'runtime') {
      $requirements['lti_tool_provider_oauth'] += [
        'value' => t('OAuth PECL library not installed'),
      ];
    }
  }

  return $requirements;
}

/**
 * Add missing LTI roles to config.
 */
function lti_tool_provider_update_8101() {
  $config_factory = Drupal::configFactory();
  $config = $config_factory->getEditable('lti_tool_provider.settings');
  $lti_roles = $config->get('v1p0_lti_roles');
  $lti_roles = array_merge(
    [
      'urn:lti:sysrole:ims/lis/SysAdmin',
      'urn:lti:sysrole:ims/lis/SysSupport',
      'urn:lti:sysrole:ims/lis/Creator',
      'urn:lti:sysrole:ims/lis/AccountAdmin',
      'urn:lti:sysrole:ims/lis/User',
      'urn:lti:sysrole:ims/lis/Administrator',
      'urn:lti:sysrole:ims/lis/None',
      'urn:lti:instrole:ims/lis/Student',
      'urn:lti:instrole:ims/lis/Faculty',
      'urn:lti:instrole:ims/lis/Member',
      'urn:lti:instrole:ims/lis/Learner',
      'urn:lti:instrole:ims/lis/Instructor',
      'urn:lti:instrole:ims/lis/Mentor',
      'urn:lti:instrole:ims/lis/Staff',
      'urn:lti:instrole:ims/lis/Alumni',
      'urn:lti:instrole:ims/lis/ProspectiveStudent',
      'urn:lti:instrole:ims/lis/Guest',
      'urn:lti:instrole:ims/lis/Other',
      'urn:lti:instrole:ims/lis/Administrator',
      'urn:lti:instrole:ims/lis/Observer',
      'urn:lti:instrole:ims/lis/None',
    ],
    $lti_roles
  );
  $config->set('v1p0_lti_roles', $lti_roles);
  $config->save(TRUE);
}

/**
 * Ensure options module is installed.
 */
function lti_tool_provider_update_8102() {
  if (!Drupal::service('module_handler')->moduleExists('options')) {
    Drupal::service("module_installer")->install(["options"]);
    drupal_flush_all_caches();
  }
}

/**
 * Updates entity fields.
 */
function lti_tool_provider_update_8103() {
  $field_lti_version_definition = BaseFieldDefinition::create('list_string')
    ->setLabel(t('LTI version'))
    ->setDescription(t('LTI version of the Consumer entity.'))
    ->setRequired(TRUE)
    ->setSettings(
      [
        'allowed_values' => [
          'v1p0' => 'LTI 1.0/1.1',
          'v1p3' => 'LTI 1.3',
        ],
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 2,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'options_select',
        'weight' => 2,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_platform_id_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Issuer (Platform Id)'))
    ->setDescription(t('The issuer of Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 5,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 5,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_client_id_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Client Id'))
    ->setDescription(t('The Client Id of the Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 6,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 6,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_deployment_id_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Deployment Id'))
    ->setDescription(t('The Deployment Id of the Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 7,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 7,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_key_set_url_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Public keyset URL'))
    ->setDescription(t('Public keyset URL of the Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 8,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 8,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_auth_token_url_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Access token URL'))
    ->setDescription(t('Access token URL of the Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 9,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 9,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_auth_login_url_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Authentication request URL'))
    ->setDescription(t('Authentication request URL of the Consumer entity.'))
    ->setSettings(
      [
        'max_length' => 512,
        'text_processing' => 0,
      ]
    )
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'string',
        'weight' => 10,
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'string',
        'weight' => 10,
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_public_key_definition = BaseFieldDefinition::create('entity_reference')
    ->setLabel(t('Public Key'))
    ->setDescription(t('The public key to share with the consumer platform.'))
    ->setSetting('target_type', 'key')
    ->setSetting('handler', 'default')
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'entity_reference_label',
        'weight' => 11,
        'settings' => [
          'link' => TRUE,
        ],
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'entity_reference_autocomplete',
        'weight' => 11,
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'autocomplete_type' => 'tags',
          'placeholder' => '',
        ],
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $field_private_key_definition = BaseFieldDefinition::create('entity_reference')
    ->setLabel(t('Private key'))
    ->setDescription(t('The private key for encrypting messages sent to a consumer platform.'))
    ->setSetting('target_type', 'key')
    ->setSetting('handler', 'default')
    ->setDisplayOptions(
      'view',
      [
        'label' => 'inline',
        'type' => 'entity_reference_label',
        'weight' => 12,
        'settings' => [
          'link' => TRUE,
        ],
      ]
    )
    ->setDisplayOptions(
      'form',
      [
        'type' => 'entity_reference_autocomplete',
        'weight' => 12,
        'settings' => [
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'autocomplete_type' => 'tags',
          'placeholder' => '',
        ],
      ]
    )
    ->setDisplayConfigurable('form', TRUE)
    ->setDisplayConfigurable('view', TRUE);

  $update_manager = Drupal::entityDefinitionUpdateManager();
  $update_manager->installFieldStorageDefinition('lti_version', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_lti_version_definition);
  $update_manager->installFieldStorageDefinition('platform_id', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_platform_id_definition);
  $update_manager->installFieldStorageDefinition('client_id', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_client_id_definition);
  $update_manager->installFieldStorageDefinition('deployment_id', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_deployment_id_definition);
  $update_manager->installFieldStorageDefinition('key_set_url', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_key_set_url_definition);
  $update_manager->installFieldStorageDefinition('auth_token_url', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_auth_token_url_definition);
  $update_manager->installFieldStorageDefinition('auth_login_url', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_auth_login_url_definition);
  $update_manager->installFieldStorageDefinition('public_key', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_public_key_definition);
  $update_manager->installFieldStorageDefinition('private_key', 'lti_tool_provider_consumer', 'lti_tool_provider_consumer', $field_private_key_definition);
  $update_manager->uninstallFieldStorageDefinition($update_manager->getFieldStorageDefinition('consumer_key', 'lti_tool_provider_nonce'));
}

/**
 * Updates entity field data.
 */
function lti_tool_provider_update_8104() {
  Database::getConnection()
    ->update('lti_tool_provider_consumer')
    ->fields(['lti_version' => 'v1p0'])
    ->execute();
}

/**
 * Replace all LTI launch in config.
 */
function lti_tool_provider_update_8105() {
  $config_factory = Drupal::configFactory();
  $config = $config_factory->getEditable('lti_tool_provider.settings');

  $v1p0_lti_launch = $config->get('lti_launch');
  if ($v1p0_lti_launch) {
    $config->set('v1p0_lti_launch', $v1p0_lti_launch);
  }

  $v1p3_lti_launch = [
    'nonce',
    'iat',
    'exp',
    'iss',
    'aud',
    'https://purl.imsglobal.org/spec/lti/claim/deployment_id',
    'https://purl.imsglobal.org/spec/lti/claim/target_link_uri',
    'sub',
    'https://purl.imsglobal.org/spec/lti/claim/lis - person_sourcedid',
    'https://purl.imsglobal.org/spec/lti/claim/lis - course_section_sourcedid',
    'https://purl.imsglobal.org/spec/lti/claim/context - id',
    'https://purl.imsglobal.org/spec/lti/claim/context - label',
    'https://purl.imsglobal.org/spec/lti/claim/context - title',
    'https://purl.imsglobal.org/spec/lti/claim/context - type - 0',
    'https://purl.imsglobal.org/spec/lti/claim/resource_link - id',
    'https://purl.imsglobal.org/spec/lti/claim/resource_link - title',
    'https://purl.imsglobal.org/spec/lti/claim/resource_link - description',
    'https://purl.imsglobal.org/spec/lti-bos/claim/basicoutcomesservice - lis_outcome_service_url',
    'given_name',
    'family_name',
    'name',
    'email',
    'https://purl.imsglobal.org/spec/lti/claim/ext - user_username',
    'https://purl.imsglobal.org/spec/lti/claim/ext - lms',
    'https://purl.imsglobal.org/spec/lti/claim/launch_presentation - locale',
    'https://purl.imsglobal.org/spec/lti/claim/launch_presentation - document_target',
    'https://purl.imsglobal.org/spec/lti/claim/launch_presentation - return_url',
    'https://purl.imsglobal.org/spec/lti/claim/tool_platform - family_code',
    'https://purl.imsglobal.org/spec/lti/claim/tool_platform - version',
    'https://purl.imsglobal.org/spec/lti/claim/tool_platform - guid',
    'https://purl.imsglobal.org/spec/lti/claim/tool_platform - name',
    'https://purl.imsglobal.org/spec/lti/claim/tool_platform - description',
    'https://purl.imsglobal.org/spec/lti/claim/version',
    'https://purl.imsglobal.org/spec/lti/claim/message_type',
    'consumer_id',
    'consumer_label',
  ];
  $config->set('v1p3_lti_launch', $v1p3_lti_launch);

  $config->save(TRUE);
}

/**
 * Replace all LTI roles in config.
 */
function lti_tool_provider_update_8106() {
  $config_factory = Drupal::configFactory();
  $config = $config_factory->getEditable('lti_tool_provider.settings');

  $v1p0_lti_roles = $config->get('lti_roles');
  if ($v1p0_lti_roles) {
    $config->set('v1p0_lti_roles', $v1p0_lti_roles);
  }

  $v1p3_lti_roles = [
    'http://purl.imsglobal.org/vocab/lis/v2/system/person#Administrator',
    'http://purl.imsglobal.org/vocab/lis/v2/system/person#None',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Administrator',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Faculty',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Guest',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#None',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Other',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Staff',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Student',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Alumni',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Instructor',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Learner',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Member',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Mentor',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Observer',
    'http://purl.imsglobal.org/vocab/lis/v2/institution/person#ProspectiveStudent',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Administrator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#Administrator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#Developer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#ExternalDeveloper',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#ExternalSupport',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#ExternalSystemAdministrator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#Support',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Administrator#SystemAdministrator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/ContentDeveloper#ContentDeveloper',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/ContentDeveloper#ContentExpert',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/ContentDeveloper#ExternalContentExpert',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/ContentDeveloper#Librarian',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#ExternalInstructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#Grader',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#GuestInstructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#Lecturer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#PrimaryInstructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#SecondaryInstructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistant',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistantGroup',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistantOffering',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistantSection',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistantSectionAssociation',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistantTemplate',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Learner',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Learner#ExternalLearner',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Learner#GuestLearner',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Learner#Instructor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Learner#Learner',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Learner#NonCreditLearner',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Mentor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#Advisor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#Auditor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalAdvisor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalAuditor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalLearningFacilitator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalMentor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalReviewer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#ExternalTutor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#LearningFacilitator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#Mentor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#Reviewer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Mentor#Tutor',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Manager',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Manager#AreaManager',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Manager#CourseCoordinator',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Manager#ExternalObserver',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Manager#Manager',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Manager#Observer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Member',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Member#Member',
    'http://purl.imsglobal.org/vocab/lis/v2/membership#Officer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Officer#Chair',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Officer#Communications',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Officer#Secretary',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Officer#Treasurer',
    'http://purl.imsglobal.org/vocab/lis/v2/membership/Officer#Vice-Chair',
  ];
  $config->set('v1p3_lti_roles', $v1p3_lti_roles);

  $config->save(TRUE);
}
